#include<iostream>
#include<fstream>
using namespace std;

#define N 4002

int		Red[N],Green[N],Blue[N];
int		numColors;
double	Contrast[N][N];
double	maxContrast;
int		maxcontrastindex;
int		counter;

struct  Answer
{
	int x;
	int y;
}
ContrastAnswer[N];

void init()
{
	for(int i=1;i<=N;i++)
	{
		Red[i]=Green[i]=Blue[i]=0;
		maxcontrastindex=0;
		maxContrast=-10000;
		for(int j=1;j<=N;j++)
			Contrast[i][j]=0;
	}
}

void calculate()
{
	counter++;
	for(int i=1;i<=numColors;i++)
	{
		for(int j=i+1;j<=numColors;j++)
		{
			Contrast[i][j]=((Red[i]-Red[j])*(Red[i]-Red[j]) + (Green[i]-Green[j])*(Green[i]-Green[j]) + (Blue[i]-Blue[j])*(Blue[i]-Blue[j]));
			if(Contrast[i][j]>maxContrast)
			{
				maxContrast=Contrast[i][j];
				maxcontrastindex=0;
				ContrastAnswer[maxcontrastindex].x=i;
				ContrastAnswer[maxcontrastindex].y=j;
			}
			else if(Contrast[i][j]==maxContrast)
			{
				maxcontrastindex++;
				ContrastAnswer[maxcontrastindex].x=i;
				ContrastAnswer[maxcontrastindex].y=j;;
			}
		}
	}

	cout<<"Data Set "<<counter<<endl;
	for(int i=0;i<=maxcontrastindex;i++)
	{
		cout<<ContrastAnswer[i].x<<" "<<ContrastAnswer[i].y<<endl;
	}
}

int main()
{
	ifstream f("colors.in");
	int numTestcases;

	f>>numTestcases;

	while(numTestcases--)
	{
		f>>numColors;
		init();
		
		for(int i=1;i<=numColors;i++)
		{
			f>>Red[i]>>Green[i]>>Blue[i];
		}

		calculate();
	}

	f.close();
	return 0;
}
